=begin
#MF KESSAI API v2

#MF KESSAI REST API

The version of the OpenAPI document: 0.2.0
Contact: support@mfkessai.co.jp
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.1.1

=end

require 'cgi'

module OpenapiClient
  class BillingApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # 請求取得
    # @param billing_id [String] 対象の請求IDを指定してください。
    # @param [Hash] opts the optional parameters
    # @return [Billing]
    def get_billing(billing_id, opts = {})
      data, _status_code, _headers = get_billing_with_http_info(billing_id, opts)
      data
    end

    # 請求取得
    # @param billing_id [String] 対象の請求IDを指定してください。
    # @param [Hash] opts the optional parameters
    # @return [Array<(Billing, Integer, Hash)>] Billing data, response status code and response headers
    def get_billing_with_http_info(billing_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BillingApi.get_billing ...'
      end
      # verify the required parameter 'billing_id' is set
      if @api_client.config.client_side_validation && billing_id.nil?
        fail ArgumentError, "Missing the required parameter 'billing_id' when calling BillingApi.get_billing"
      end
      # resource path
      local_var_path = '/billings/{billing_id}'.sub('{' + 'billing_id' + '}', CGI.escape(billing_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'Billing' 

      # auth_names
      auth_names = opts[:auth_names] || ['apikey']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BillingApi#get_billing\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 請求一覧取得
    # @param [Hash] opts the optional parameters
    # @option opts [String] :customer_id 任意の顧客IDを指定します。指定した顧客への請求が返却されます。
    # @option opts [Array<String>] :status 請求ステータスを指定します。該当するステータスの請求が返却されます。複数指定することが可能です。指定できる値は &#x60;scheduled&#x60;(請求予定), &#x60;invoice_issued&#x60;(請求書発行済), &#x60;account_transfer_notified&#x60;(口座振替通知済)の3種類のみです。
    # @option opts [String] :due_date_from 日付を指定します。指定した日付以降の支払期限となっている請求を取得できます。指定された日付のものも含まれます。
    # @option opts [String] :due_date_to 日付を指定します。指定した日付以前の支払期限となっている請求を取得できます。指定された日付のものも含まれます。
    # @option opts [String] :issue_date_from 日付を指定します。指定した日付以降の請求書発行日となっている請求を取得できます。指定された日付のものも含まれます。
    # @option opts [String] :issue_date_to 日付を指定します。指定した日付以前の請求書発行日となっている請求を取得できます。指定された日付のものも含まれます。
    # @option opts [Boolean] :unpaid 未入金のあり(&#x60;true&#x60;)、なし(&#x60;false&#x60;)を指定します。空文字が指定された場合、&#x60;false&#x60;として扱われます。
    # @option opts [String] :after 任意のリソースIDを指定します。追加日時の降順でこのIDのリソースよりも後のリソースを取得します。この時&#x60;after&#x60;で指定したIDのリソースは結果に含まれません。
    # @option opts [String] :before 任意のリソースIDを指定します。追加日時の降順でこのIDのリソースよりも前のリソースを取得します。この時&#x60;before&#x60;で指定したIDのリソースは結果に含まれません。
    # @option opts [Integer] :limit 取得したいリソースの最大件数を指定します。1~200の間の整数で指定してください。指定がない場合は20になります。
    # @return [InlineResponse2005]
    def get_billings_list(opts = {})
      data, _status_code, _headers = get_billings_list_with_http_info(opts)
      data
    end

    # 請求一覧取得
    # @param [Hash] opts the optional parameters
    # @option opts [String] :customer_id 任意の顧客IDを指定します。指定した顧客への請求が返却されます。
    # @option opts [Array<String>] :status 請求ステータスを指定します。該当するステータスの請求が返却されます。複数指定することが可能です。指定できる値は &#x60;scheduled&#x60;(請求予定), &#x60;invoice_issued&#x60;(請求書発行済), &#x60;account_transfer_notified&#x60;(口座振替通知済)の3種類のみです。
    # @option opts [String] :due_date_from 日付を指定します。指定した日付以降の支払期限となっている請求を取得できます。指定された日付のものも含まれます。
    # @option opts [String] :due_date_to 日付を指定します。指定した日付以前の支払期限となっている請求を取得できます。指定された日付のものも含まれます。
    # @option opts [String] :issue_date_from 日付を指定します。指定した日付以降の請求書発行日となっている請求を取得できます。指定された日付のものも含まれます。
    # @option opts [String] :issue_date_to 日付を指定します。指定した日付以前の請求書発行日となっている請求を取得できます。指定された日付のものも含まれます。
    # @option opts [Boolean] :unpaid 未入金のあり(&#x60;true&#x60;)、なし(&#x60;false&#x60;)を指定します。空文字が指定された場合、&#x60;false&#x60;として扱われます。
    # @option opts [String] :after 任意のリソースIDを指定します。追加日時の降順でこのIDのリソースよりも後のリソースを取得します。この時&#x60;after&#x60;で指定したIDのリソースは結果に含まれません。
    # @option opts [String] :before 任意のリソースIDを指定します。追加日時の降順でこのIDのリソースよりも前のリソースを取得します。この時&#x60;before&#x60;で指定したIDのリソースは結果に含まれません。
    # @option opts [Integer] :limit 取得したいリソースの最大件数を指定します。1~200の間の整数で指定してください。指定がない場合は20になります。
    # @return [Array<(InlineResponse2005, Integer, Hash)>] InlineResponse2005 data, response status code and response headers
    def get_billings_list_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BillingApi.get_billings_list ...'
      end
      allowable_values = ["scheduled", "invoice_issued", "account_transfer_notified"]
      if @api_client.config.client_side_validation && opts[:'status'] && !opts[:'status'].all? { |item| allowable_values.include?(item) }
        fail ArgumentError, "invalid value for \"status\", must include one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 200
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling BillingApi.get_billings_list, must be smaller than or equal to 200.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling BillingApi.get_billings_list, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/billings'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'customer_id'] = opts[:'customer_id'] if !opts[:'customer_id'].nil?
      query_params[:'status'] = @api_client.build_collection_param(opts[:'status'], :csv) if !opts[:'status'].nil?
      query_params[:'due_date_from'] = opts[:'due_date_from'] if !opts[:'due_date_from'].nil?
      query_params[:'due_date_to'] = opts[:'due_date_to'] if !opts[:'due_date_to'].nil?
      query_params[:'issue_date_from'] = opts[:'issue_date_from'] if !opts[:'issue_date_from'].nil?
      query_params[:'issue_date_to'] = opts[:'issue_date_to'] if !opts[:'issue_date_to'].nil?
      query_params[:'unpaid'] = opts[:'unpaid'] if !opts[:'unpaid'].nil?
      query_params[:'after'] = opts[:'after'] if !opts[:'after'].nil?
      query_params[:'before'] = opts[:'before'] if !opts[:'before'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'InlineResponse2005' 

      # auth_names
      auth_names = opts[:auth_names] || ['apikey']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BillingApi#get_billings_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
